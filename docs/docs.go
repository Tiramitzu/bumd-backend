// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "lifelinejar@mail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login to get JWT token and refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "user login",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success, jwt provided",
                        "schema": {
                            "$ref": "#/definitions/http_util.JSONResultLogin"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "403": {
                        "description": "Login forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.LoginError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/site/index": {
            "get": {
                "description": "index page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Site"
                ],
                "summary": "index",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "403": {
                        "description": "Login forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.LoginError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bentuk_badan_hukum": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get data bentuk badan hukum.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Badan Hukum"
                ],
                "summary": "get data bentuk badan hukum",
                "operationId": "bentuk_badan_hukum-index",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Halaman yang ditampilkan",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Jumlah data per halaman, maksimal 5 data per halaman",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nama Bentuk Badan Hukum",
                        "name": "nama",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.BentukBadanHukumModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create data bentuk badan hukum.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Badan Hukum"
                ],
                "summary": "create data bentuk badan hukum",
                "operationId": "bentuk_badan_hukum-create",
                "parameters": [
                    {
                        "description": "Create payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BentukBadanHukumForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bentuk_badan_hukum/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update data bentuk badan hukum.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Badan Hukum"
                ],
                "summary": "update data bentuk badan hukum",
                "operationId": "bentuk_badan_hukum-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk update data bentuk badan hukum",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BentukBadanHukumForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete data bentuk badan hukum.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Badan Hukum"
                ],
                "summary": "delete data bentuk badan hukum",
                "operationId": "bentuk_badan_hukum-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk delete data bentuk badan hukum",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bentuk_usaha": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get data bentuk usaha.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Usaha"
                ],
                "summary": "get data bentuk usaha",
                "operationId": "bentuk_usaha-index",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Halaman yang ditampilkan",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Jumlah data per halaman, maksimal 5 data per halaman",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nama Bentuk Usaha",
                        "name": "nama",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.BentukUsahaModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create data bentuk usaha.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Usaha"
                ],
                "summary": "create data bentuk usaha",
                "operationId": "bentuk_usaha-create",
                "parameters": [
                    {
                        "description": "Create payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BentukUsahaForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bentuk_usaha/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update data bentuk usaha.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Usaha"
                ],
                "summary": "update data bentuk usaha",
                "operationId": "bentuk_usaha-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk update data bentuk usaha",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BentukUsahaForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete data bentuk usaha.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bentuk Usaha"
                ],
                "summary": "delete data bentuk usaha",
                "operationId": "bentuk_usaha-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk delete data bentuk usaha",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bumd": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get data bumd.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BUMD"
                ],
                "summary": "get data bumd",
                "operationId": "bumd-index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama BUMD",
                        "name": "nama",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Halaman yang ditampilkan",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Jumlah data per halaman, maksimal 5 data per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.BumdModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create data bumd.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BUMD"
                ],
                "summary": "create data bumd",
                "operationId": "bumd-create",
                "parameters": [
                    {
                        "description": "Create payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BumdForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/bumd/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update data bumd.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BUMD"
                ],
                "summary": "update data bumd",
                "operationId": "bumd-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk update data bumd",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BumdForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete data bumd.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BUMD"
                ],
                "summary": "delete data bumd",
                "operationId": "bumd-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id untuk delete data bumd",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/user/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user logout.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "logout",
                "operationId": "user-logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        },
        "/strict/user/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get profile info.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "user get profile info",
                "operationId": "user-profile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    },
                    "422": {
                        "description": "Data validation failed",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.RequestError"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.RequestError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http_util.JSONResultLogin": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzYxNjgyMjksImlk._aYI7pV2c9SU9VOp3RY_mxtFenYFQuKPJtVfk"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzYwODU0MjksImlkIjoyLCJwaG9uZSI6Iis2MjgxMjM0NTYyIiwidXNlcm5hbWUiOi.dl_ojy9ojLnWqpW589YltLPV61TCsON-3yQ2"
                }
            }
        },
        "models.BentukBadanHukumForm": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.BentukBadanHukumModel": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.BentukUsahaForm": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.BentukUsahaModel": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "models.BumdForm": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id_bentuk_hukum": {
                    "type": "integer"
                },
                "id_bentuk_usaha": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "no_telp": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.BumdModel": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "bentuk_hukum": {
                    "type": "string"
                },
                "bentuk_usaha": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_bentuk_hukum": {
                    "type": "integer"
                },
                "id_bentuk_usaha": {
                    "type": "integer"
                },
                "id_daerah": {
                    "type": "integer"
                },
                "nama": {
                    "type": "string"
                },
                "no_telp": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.LoginForm": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "warid"
                }
            }
        },
        "models.UserDetail": {
            "type": "object",
            "properties": {
                "nama_role": {
                    "type": "string"
                },
                "nama_user": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utils.DataValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email address"
                }
            }
        },
        "utils.LoginError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Attempt   int    ` + "`" + `json:\"attempt\" xml:\"attempt\" example:\"3\"` + "`" + `                            // sisa kesempatan login sebelum diblokir 5 menit\nNextLogin int    ` + "`" + `json:\"next_login\" xml:\"next_login\" example:\"123233213\"` + "`" + `              // unix timestamp UTC blokir login dibuka kembali",
                    "type": "string",
                    "example": "invalid username or password"
                }
            }
        },
        "utils.RequestError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 422
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.DataValidationError"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email address"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SIPD Service Auth",
	Description:      "SIPD Service Auth Rest API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
