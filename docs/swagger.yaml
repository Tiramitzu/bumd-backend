definitions:
  http_util.JSONResultLogin:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzYxNjgyMjksImlk._aYI7pV2c9SU9VOp3RY_mxtFenYFQuKPJtVfk
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzYwODU0MjksImlkIjoyLCJwaG9uZSI6Iis2MjgxMjM0NTYyIiwidXNlcm5hbWUiOi.dl_ojy9ojLnWqpW589YltLPV61TCsON-3yQ2
        type: string
    type: object
  models.AktaNotarisForm:
    type: object
  models.AktaNotarisModel:
    properties:
      file:
        type: string
      id:
        type: integer
      id_bumd:
        type: integer
      keterangan:
        type: string
      modal_dasar:
        type: number
      nomor_perda:
        type: string
      tanggal_perda:
        type: string
    type: object
  models.BentukBadanHukumForm:
    properties:
      deskripsi:
        type: string
      nama:
        type: string
    type: object
  models.BentukBadanHukumModel:
    properties:
      deskripsi:
        type: string
      id:
        type: integer
      nama:
        type: string
    type: object
  models.BentukUsahaForm:
    properties:
      deskripsi:
        type: string
      nama:
        type: string
    type: object
  models.BentukUsahaModel:
    properties:
      deskripsi:
        type: string
      id:
        type: integer
      nama:
        type: string
    type: object
  models.BumdForm:
    properties:
      alamat:
        type: string
      deskripsi:
        type: string
      email:
        type: string
      id_bentuk_hukum:
        type: integer
      id_bentuk_usaha:
        type: integer
      id_induk_perusahaan:
        type: integer
      nama:
        type: string
      narahubung:
        type: string
      no_fax:
        type: string
      no_telp:
        type: string
      penerapan_spi:
        type: boolean
      website:
        type: string
    type: object
  models.BumdModel:
    properties:
      alamat:
        type: string
      bentuk_badan_hukum:
        type: string
      bentuk_usaha:
        type: string
      deskripsi:
        type: string
      email:
        type: string
      id:
        type: integer
      id_bentuk_hukum:
        type: integer
      id_bentuk_usaha:
        type: integer
      id_daerah:
        type: integer
      id_induk_perusahaan:
        type: integer
      nama:
        type: string
      nama_induk_perusahaan:
        type: string
      narahubung:
        type: string
      no_fax:
        type: string
      no_telp:
        type: string
      penerapan_spi:
        type: boolean
      website:
        type: string
    type: object
  models.JenisDokumenForm:
    properties:
      deskripsi:
        type: string
      nama:
        type: string
    type: object
  models.JenisDokumenModel:
    properties:
      deskripsi:
        type: string
      id:
        type: integer
      nama:
        type: string
    type: object
  models.LoginForm:
    properties:
      password:
        description: User password
        example: "123456"
        type: string
      username:
        example: warid
        type: string
    required:
    - password
    - username
    type: object
  models.ProdukModel:
    properties:
      deskripsi:
        type: string
      gambar:
        type: string
      id:
        type: integer
      id_bumd:
        type: integer
      id_daerah:
        type: integer
      nama:
        type: string
      nilai:
        type: number
      tampilkan:
        type: boolean
    type: object
  models.RolesModel:
    properties:
      id:
        type: integer
      nama:
        type: string
    type: object
  models.User:
    properties:
      id_bumd:
        type: integer
      id_daerah:
        type: integer
      id_role:
        type: integer
      id_user:
        type: integer
    type: object
  models.UserDetail:
    properties:
      nama_bumd:
        type: string
      nama_role:
        type: string
      nama_user:
        type: string
      username:
        type: string
    type: object
  models.UserModel:
    properties:
      id_bumd:
        type: integer
      id_daerah:
        type: integer
      id_role:
        type: integer
      id_user:
        type: integer
      logo:
        type: string
      nama:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  utils.DataValidationError:
    properties:
      field:
        example: email
        type: string
      message:
        example: Invalid email address
        type: string
    type: object
  utils.LoginError:
    properties:
      message:
        description: |-
          Attempt   int    `json:"attempt" xml:"attempt" example:"3"`                            // sisa kesempatan login sebelum diblokir 5 menit
          NextLogin int    `json:"next_login" xml:"next_login" example:"123233213"`              // unix timestamp UTC blokir login dibuka kembali
        example: invalid username or password
        type: string
    type: object
  utils.RequestError:
    properties:
      code:
        example: 422
        type: integer
      fields:
        items:
          $ref: '#/definitions/utils.DataValidationError'
        type: array
      message:
        example: Invalid email address
        type: string
    type: object
info:
  contact:
    email: lifelinejar@mail.com
    name: API Support
  description: BUMD Service Rest API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BUMD Service
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login to get JWT token and refresh token.
      operationId: auth-login
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: Login Success, jwt provided
          schema:
            $ref: '#/definitions/http_util.JSONResultLogin'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Login forbidden
          schema:
            $ref: '#/definitions/utils.LoginError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      summary: user login
      tags:
      - Auth
  /site/index:
    get:
      consumes:
      - application/json
      description: index page.
      operationId: index
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema: {}
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Login forbidden
          schema:
            $ref: '#/definitions/utils.LoginError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      summary: index
      tags:
      - Site
  /strict/akta_notaris:
    get:
      description: get data akta notaris.
      operationId: akta_notaris-index
      parameters:
      - description: Id BUMD
        in: query
        name: id_bumd
        required: true
        type: integer
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      - description: Pencarian
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.AktaNotarisModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data akta notaris
      tags:
      - Akta Notaris
    post:
      consumes:
      - multipart/form-data
      description: create data akta notaris.
      operationId: akta_notaris-create
      parameters:
      - description: Nomor Perda
        in: formData
        name: nomor_perda
        required: true
        type: string
      - description: Tanggal Perda
        in: formData
        name: tanggal_perda
        required: true
        type: string
      - description: Keterangan
        in: formData
        name: keterangan
        required: true
        type: string
      - description: File
        in: formData
        name: file
        type: string
      - description: Modal Dasar
        format: float64
        in: formData
        name: modal_dasar
        required: true
        type: number
      - description: Id BUMD
        in: formData
        name: id_bumd
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create data akta notaris
      tags:
      - Akta Notaris
  /strict/akta_notaris/{id}:
    delete:
      consumes:
      - application/json
      description: delete data akta notaris.
      operationId: akta_notaris-delete
      parameters:
      - description: Id untuk delete data akta notaris
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete data akta notaris
      tags:
      - Akta Notaris
    get:
      description: get data akta notaris by id.
      operationId: akta_notaris-view
      parameters:
      - description: Id untuk get data akta notaris
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.AktaNotarisModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data akta notaris by id
      tags:
      - Akta Notaris
    put:
      consumes:
      - multipart/form-data
      description: update data akta notaris.
      operationId: akta_notaris-update
      parameters:
      - description: Nomor Perda
        in: formData
        name: nomor_perda
        required: true
        type: string
      - description: Tanggal Perda
        in: formData
        name: tanggal_perda
        required: true
        type: string
      - description: Keterangan
        in: formData
        name: keterangan
        required: true
        type: string
      - description: File
        in: formData
        name: file
        type: string
      - description: Modal Dasar
        format: float64
        in: formData
        name: modal_dasar
        required: true
        type: number
      - description: Id BUMD
        in: formData
        name: id_bumd
        required: true
        type: integer
      - description: Id untuk update data akta notaris
        in: path
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.AktaNotarisForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update data akta notaris
      tags:
      - Akta Notaris
  /strict/bentuk_badan_hukum:
    get:
      description: get data bentuk badan hukum.
      operationId: bentuk_badan_hukum-index
      parameters:
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      - description: Nama Bentuk Badan Hukum
        in: query
        name: nama
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BentukBadanHukumModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bentuk badan hukum
      tags:
      - Bentuk Badan Hukum
    post:
      consumes:
      - application/json
      description: create data bentuk badan hukum.
      operationId: bentuk_badan_hukum-create
      parameters:
      - description: Create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BentukBadanHukumForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create data bentuk badan hukum
      tags:
      - Bentuk Badan Hukum
  /strict/bentuk_badan_hukum/{id}:
    delete:
      consumes:
      - application/json
      description: delete data bentuk badan hukum.
      operationId: bentuk_badan_hukum-delete
      parameters:
      - description: Id untuk delete data bentuk badan hukum
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete data bentuk badan hukum
      tags:
      - Bentuk Badan Hukum
    get:
      description: get data bentuk badan hukum by id.
      operationId: bentuk_badan_hukum-view
      parameters:
      - description: Id untuk get data bentuk badan hukum
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BentukBadanHukumModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bentuk badan hukum by id
      tags:
      - Bentuk Badan Hukum
    put:
      consumes:
      - application/json
      description: update data bentuk badan hukum.
      operationId: bentuk_badan_hukum-update
      parameters:
      - description: Id untuk update data bentuk badan hukum
        in: path
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BentukBadanHukumForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update data bentuk badan hukum
      tags:
      - Bentuk Badan Hukum
  /strict/bentuk_usaha:
    get:
      description: get data bentuk usaha.
      operationId: bentuk_usaha-index
      parameters:
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      - description: Nama Bentuk Usaha
        in: query
        name: nama
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BentukUsahaModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bentuk usaha
      tags:
      - Bentuk Usaha
    post:
      consumes:
      - application/json
      description: create data bentuk usaha.
      operationId: bentuk_usaha-create
      parameters:
      - description: Create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BentukUsahaForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create data bentuk usaha
      tags:
      - Bentuk Usaha
  /strict/bentuk_usaha/{id}:
    delete:
      consumes:
      - application/json
      description: delete data bentuk usaha.
      operationId: bentuk_usaha-delete
      parameters:
      - description: Id untuk delete data bentuk usaha
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete data bentuk usaha
      tags:
      - Bentuk Usaha
    get:
      description: get data bentuk usaha by id.
      operationId: bentuk_usaha-view
      parameters:
      - description: Id untuk get data bentuk usaha
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BentukUsahaModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bentuk usaha by id
      tags:
      - Bentuk Usaha
    put:
      consumes:
      - application/json
      description: update data bentuk usaha.
      operationId: bentuk_usaha-update
      parameters:
      - description: Id untuk update data bentuk usaha
        in: path
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BentukUsahaForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update data bentuk usaha
      tags:
      - Bentuk Usaha
  /strict/bumd:
    get:
      description: get data bumd.
      operationId: bumd-index
      parameters:
      - description: Nama BUMD
        in: query
        name: nama
        type: string
      - description: Penerapan SPI
        in: query
        name: penerapan_spi
        type: boolean
      - description: Induk Perusahaan
        in: query
        name: induk_perusahaan
        type: integer
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BumdModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bumd
      tags:
      - BUMD
    post:
      consumes:
      - application/json
      description: create data bumd.
      operationId: bumd-create
      parameters:
      - description: Create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BumdForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create data bumd
      tags:
      - BUMD
  /strict/bumd/{id}:
    delete:
      consumes:
      - application/json
      description: delete data bumd.
      operationId: bumd-delete
      parameters:
      - description: Id untuk delete data bumd
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete data bumd
      tags:
      - BUMD
    get:
      description: get data bumd by id.
      operationId: bumd-view
      parameters:
      - description: Id untuk get data bumd
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.BumdModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data bumd by id
      tags:
      - BUMD
    put:
      consumes:
      - application/json
      description: update data bumd.
      operationId: bumd-update
      parameters:
      - description: Id untuk update data bumd
        in: path
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.BumdForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update data bumd
      tags:
      - BUMD
  /strict/jenis_dokumen:
    get:
      description: get data jenis dokumen.
      operationId: jenis_dokumen-index
      parameters:
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      - description: Nama Jenis dokumen
        in: query
        name: nama
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.JenisDokumenModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data jenis dokumen
      tags:
      - Jenis dokumen
    post:
      consumes:
      - application/json
      description: create data jenis dokumen.
      operationId: jenis_dokumen-create
      parameters:
      - description: Create payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.JenisDokumenForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create data jenis dokumen
      tags:
      - Jenis dokumen
  /strict/jenis_dokumen/{id}:
    delete:
      consumes:
      - application/json
      description: delete data jenis dokumen.
      operationId: jenis_dokumen-delete
      parameters:
      - description: Id untuk delete data jenis dokumen
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete data jenis dokumen
      tags:
      - Jenis dokumen
    get:
      description: get data jenis dokumen by id.
      operationId: jenis_dokumen-view
      parameters:
      - description: Id untuk get data jenis dokumen
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.JenisDokumenModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data jenis dokumen by id
      tags:
      - Jenis dokumen
    put:
      consumes:
      - application/json
      description: update data jenis dokumen.
      operationId: jenis_dokumen-update
      parameters:
      - description: Id untuk update data jenis dokumen
        in: path
        name: id
        required: true
        type: integer
      - description: Update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.JenisDokumenForm'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update data jenis dokumen
      tags:
      - Jenis dokumen
  /strict/produk:
    get:
      description: get data produk.
      operationId: produk-index
      parameters:
      - description: Id BUMD
        in: query
        name: id_bumd
        type: integer
      - description: Nama Produk
        in: query
        name: nama
        type: string
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.ProdukModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data produk
      tags:
      - Produk
  /strict/roles:
    get:
      description: get data roles.
      operationId: roles-index
      parameters:
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      - description: Nama Roles
        in: query
        name: nama
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.RolesModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data roles
      tags:
      - Roles
  /strict/roles/{id}:
    get:
      description: get data roles by id.
      operationId: roles-view
      parameters:
      - description: Id untuk get data roles
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.RolesModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get data roles by id
      tags:
      - Bentuk Usaha
  /strict/user:
    get:
      description: get all user.
      operationId: user-index
      parameters:
      - description: Id Role
        in: query
        name: id_role
        required: true
        type: integer
      - description: Halaman yang ditampilkan
        in: query
        name: page
        type: integer
      - description: Jumlah data per halaman, maksimal 5 data per halaman
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get all user
      tags:
      - User
    post:
      consumes:
      - multipart/form-data
      description: create user.
      operationId: user-create
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Id Daerah
        format: int32
        in: formData
        name: id_daerah
        required: true
        type: integer
      - description: Id Role
        format: int32
        in: formData
        name: id_role
        required: true
        type: integer
      - description: Nama
        in: formData
        name: nama
        required: true
        type: string
      - description: Logo
        in: formData
        name: logo
        type: file
      - description: Id BUMD
        format: int32
        in: formData
        name: id_bumd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: create user
      tags:
      - User
  /strict/user/{id}:
    delete:
      description: delete user.
      operationId: user-delete
      parameters:
      - description: Id untuk delete data user
        format: int32
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: delete user
      tags:
      - User
    get:
      description: get user by id.
      operationId: user-view
      parameters:
      - description: Id untuk get data user
        format: int32
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.UserModel'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: get user by id
      tags:
      - User
    put:
      description: update user.
      operationId: user-update
      parameters:
      - description: Id untuk update data user
        format: int32
        in: path
        name: id
        required: true
        type: integer
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Id Daerah
        format: int32
        in: formData
        name: id_daerah
        required: true
        type: integer
      - description: Id Role
        format: int32
        in: formData
        name: id_role
        required: true
        type: integer
      - description: Nama
        in: formData
        name: nama
        required: true
        type: string
      - description: Logo
        in: formData
        name: logo
        type: file
      - description: Id BUMD
        format: int32
        in: formData
        name: id_bumd
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: update user
      tags:
      - User
  /strict/user/logout:
    get:
      description: user logout.
      operationId: user-logout
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: logout
      tags:
      - User
  /strict/user/profile:
    get:
      description: get profile info.
      operationId: user-profile
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.UserDetail'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.RequestError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/utils.RequestError'
        "422":
          description: Data validation failed
          schema:
            items:
              $ref: '#/definitions/utils.RequestError'
            type: array
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/utils.RequestError'
      security:
      - ApiKeyAuth: []
      summary: user get profile info
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
